#include <stdio.h>
#include <limits.h>

// Function to find the maximum sum of a contiguous subarray
int maxSubarraySum(int arr[], int n) {
    int maxSum = INT_MIN; // Initialize with the smallest possible integer
    int currentSum = 0;

    for (int i = 0; i < n; i++) {
        currentSum += arr[i];

        // Update maxSum if currentSum is greater
        if (currentSum > maxSum) {
            maxSum = currentSum;
        }

        // Reset currentSum to 0 if it becomes negative
        if (currentSum < 0) {
            currentSum = 0;
        }
    }

    return maxSum;
}

int main() {
    int arr[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int n = sizeof(arr) / sizeof(arr[0]);

    int result = maxSubarraySum(arr, n);
    printf("Maximum sum of a contiguous subarray: %d\n", result);

    return 0;
}
